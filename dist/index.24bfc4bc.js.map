{"mappings":"AAAA,IAAI;AACJ,IAAI;AAEJ,IAAI,UAAU;IACV,sEAAsE;QAClE,QAAQ;QACR,WAAW;QACX,cAAc;YACV;gBACI,QAAQ;gBACR,WAAW;gBACX,QAAQ;gBACR,YAAY;YAChB;SACH;IACL;IACA,sEAAsE;QAClE,QAAQ;QACR,WAAW;QACX,cAAc;YACV;gBACI,QAAQ;gBACR,WAAW;gBACX,QAAQ;gBACR,YAAY;YAChB;YACA;gBACI,QAAQ;gBACR,WAAW;gBACX,QAAQ;gBACR,YAAY;YAChB;YACA;gBACI,QAAQ;gBACR,WAAW;gBACX,QAAQ;gBACR,YAAY;YAChB;YACA;gBACI,QAAQ;gBACR,WAAW;gBACX,QAAQ;gBACR,YAAY;YAChB;SACH;IACL;IACA,sEAAsE;QAClE,QAAQ;QACR,WAAW;QACX,cAAc;YACV;gBACI,QAAQ;gBACR,WAAW;gBACX,QAAQ;gBACR,YAAY;YAChB;SACH;IACL;AACJ;AAEA,MAAM,YAAY,OAAO;IACrB,2DAA2D;IAE3D,SAAS,cAAc,CAAC,OAAO,SAAS,GAAG;IAC3C,OAAO,IAAI,CAAC,SAAS,OAAO,CAAC,CAAA;QACzB,IAAI,aAAa,SAAS,aAAa,CAAC;QACxC,WAAW,EAAE,GAAG,SAAS;QACzB,WAAW,SAAS,CAAC,GAAG,CAAC;QACzB,IAAI,KAAK,SAAS,aAAa,CAAC;QAChC,GAAG,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG;QAC7C,IAAI,OAAO,SAAS,aAAa,CAAC;QAClC,KAAK,SAAS,CAAC,GAAG,CAAC;QACnB,IAAI,IAAI,SAAS,aAAa,CAAC;QAC/B,EAAE,IAAI,GAAG;QACT,EAAE,OAAO,GAAG,CAAC;YAAY,MAAM,cAAc;YAAI,sBAAsB;QAAW;QAClF,EAAE,WAAW,GAAG;QAChB,KAAK,WAAW,CAAC;QACjB,GAAG,WAAW,CAAC;QACf,WAAW,WAAW,CAAC;QACvB,IAAI,OAAO,SAAS,aAAa,CAAC;QAClC,KAAK,EAAE,GAAG,SAAS;QACnB,WAAW,WAAW,CAAC;QACvB,SAAS,cAAc,CAAC,OAAO,WAAW,CAAC;IAC/C;IAEA,SAAS,cAAc,CAAC,aAAa,SAAS,GAAG,MAAM,gBAAgB;IACvE,SAAS,cAAc,CAAC,0EAA0E,SAAS,GAAG,MAAM,cAAc;IAElI,IAAI,aAAa,MAAM,eAAe;IAEtC,IAAI,WAAW,MAAM,KAAK,GAAG;QACzB,SAAS,cAAc,CAAC,0EAA0E,SAAS,GAAG;QAC9G;IACJ,OAAO;QACH,IAAI,QAAQ,SAAS,aAAa,CAAC;QACnC,WAAW,OAAO,CAAC,CAAA;YACf,IAAI,MAAM,SAAS,aAAa,CAAC;YAEjC,IAAI,QAAQ,SAAS,aAAa,CAAC;YACnC,MAAM,WAAW,GAAG,SAAS,eAAe,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK;YAC3D,MAAM,SAAS,CAAC,GAAG,CAAC;YACpB,IAAI,WAAW,CAAC;YAEhB,IAAI,QAAQ,SAAS,aAAa,CAAC;YACnC,MAAM,WAAW,GAAG,SAAS,eAAe,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK;YAC3D,MAAM,SAAS,CAAC,GAAG,CAAC;YACpB,IAAI,WAAW,CAAC;YAEhB,MAAM,WAAW,CAAC;QACtB;QACA,SAAS,cAAc,CAAC,0EAA0E,WAAW,CAAC;IAClH;IAEA,IAAI,WAAW,MAAM,oBAAoB,SAAS;IAClD,IAAI,SAAS,MAAM,KAAK,GACpB,SAAS,cAAc,CAAC,0EAA0E,SAAS,GAAG;SAE9G,SAAS,cAAc,CAAC,0EAA0E,SAAS,GAAG;IAIlH,eAAe;AACnB;AAEA,MAAM,SAAS;IACX,IAAI,QAAQ,SAAS,cAAc,CAAC,UAAU,KAAK;IACnD,UAAU;AACd;AAEA,MAAM,wBAAwB,OAAO;IACjC,IAAI,oBAAoB,SAAS,cAAc,CAAC,QAAQ;IACxD,IAAI,qBAAqB,MAAM;QAE3B,oBAAoB,SAAS,aAAa,CAAC;QAC3C,kBAAkB,EAAE,GAAG,QAAQ;QAC/B,SAAS,cAAc,CAAC,SAAS,UAAU,OAAO,CAAC;QACnD,kBAAkB,SAAS,GAAG,aAAa,OAAO,CAAC,SAAS,CAAC,IAAI,GAAG;QAEpE,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,CAAA;YACjC,kBAAkB,SAAS,IAAI,SAAS,OAAO,GAAG,kBAAkB,SAAS,IAAI,GAAG,aAAa,SAAS,QAAQ,GAAG;QACzH;QAEA,kBAAkB,SAAS,IAAI,8CAA8C,WAAW;QACxF,kBAAkB,eAAe,CAAC;IACtC;IACA,kBAAkB,eAAe,CAAC;AACtC;AAEA,MAAM,wBAAwB,OAAO;IACjC,IAAI,OAAO,CAAC;IAEZ,IAAI,SAAS,SAAS,gBAAgB,CAAC,CAAC,IAAI,EAAE,SAAS,MAAM,CAAC;IAE9D,OAAO,OAAO,CAAC,CAAA;QACX,QAAQ,GAAG,CAAC,MAAM,KAAK;QAEvB,IAAI,MAAM,IAAI,KAAK,YAAY;YAC3B,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,OAAO;YAC9B,MAAM,OAAO,GAAG;QACpB,OAAO;YACH,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,MAAM,KAAK;YAC5B,MAAM,KAAK,GAAG;QAClB;IACJ;IAEA,kBAAkB,UAAU,MAAM;IAElC,SAAS,cAAc,CAAC,QAAQ,UAAU,eAAe,CAAC;AAC9D","sources":["src/app.js"],"sourcesContent":["var currentTopic;\r\nvar parentTopic;\r\n\r\nlet schemas = {\r\n    \"0xddc07ff085923cb9a3c58bf684344b7672881e5a004044e3e99527861fed6435\": {\r\n        \"name\": \"topic\",\r\n        \"display\": \"Subtopics\",\r\n        \"properties\": [\r\n            {\r\n                \"name\": \"topic\",\r\n                \"display\": \"Topic\",\r\n                \"type\": \"string\",\r\n                \"formType\": \"text\"\r\n            }\r\n        ]\r\n    },\r\n    \"0xe5abe9a6766fbf5944829bb25cc023cc3c7b3b2326acd9b6047cc019960e0b01\": {\r\n        \"name\": \"property\",\r\n        \"display\": \"Properties\",\r\n        \"properties\": [\r\n            {\r\n                \"name\": \"name\",\r\n                \"display\": \"Name\",\r\n                \"type\": \"string\",\r\n                \"formType\": \"text\"\r\n            },\r\n            {\r\n                \"name\": \"value\",\r\n                \"display\": \"Value\",\r\n                \"type\": \"string\",\r\n                \"formType\": \"text\"\r\n            },\r\n            {\r\n                \"name\": \"mediaType\",\r\n                \"display\": \"Media Type\",\r\n                \"type\": \"string\",\r\n                \"formType\": \"text\"\r\n            },\r\n            {\r\n                \"name\": \"Offchain\",\r\n                \"display\": \"Is Offchain? (IPFS)\",\r\n                \"type\": \"bool\",\r\n                \"formType\": \"checkbox\"\r\n            },\r\n        ]\r\n    },\r\n    \"0x3969bb076acfb992af54d51274c5c868641ca5344e1aacd0b1f5e4f80ac0822f\": {\r\n        \"name\": \"message\",\r\n        \"display\": \"Messages\",\r\n        \"properties\": [\r\n            {\r\n                \"name\": \"message\",\r\n                \"display\": \"Message\",\r\n                \"type\": \"string\",\r\n                \"formType\": \"text\"\r\n            }\r\n        ]\r\n    },\r\n};\r\n\r\nconst loadTopic = async (topicId) => {\r\n    //history.pushState({topicId: topicId}, \"\", \"/\" + topicId);\r\n\r\n    document.getElementById(\"app\").innerHTML = \"\";\r\n    Object.keys(schemas).forEach(schemaId => {\r\n        let schemaView = document.createElement(\"div\");\r\n        schemaView.id = \"View\" + schemaId;\r\n        schemaView.classList.add(\"schemaView\");\r\n        let h2 = document.createElement(\"h2\");\r\n        h2.textContent = schemas[schemaId].display + \" \";\r\n        let span = document.createElement(\"span\");\r\n        span.classList.add(\"createAttestation\");\r\n        let a = document.createElement(\"a\");\r\n        a.href = \"\";\r\n        a.onclick = (event) => { event.preventDefault(); openAttestationEditor(schemaId); }\r\n        a.textContent = \"[Create New]\";\r\n        span.appendChild(a);\r\n        h2.appendChild(span);\r\n        schemaView.appendChild(h2);\r\n        let list = document.createElement(\"div\");\r\n        list.id = \"List\" + schemaId;\r\n        schemaView.appendChild(list);\r\n        document.getElementById(\"app\").appendChild(schemaView);\r\n    });\r\n\r\n    document.getElementById(\"topicPath\").innerHTML = await getParentTopics(topicId);\r\n    document.getElementById(\"List0xddc07ff085923cb9a3c58bf684344b7672881e5a004044e3e99527861fed6435\").innerHTML = await loadTopicList(topicId);\r\n\r\n    let properties = await loadProperties(topicId);\r\n\r\n    if (properties.length === 0) {\r\n        document.getElementById(\"List0xe5abe9a6766fbf5944829bb25cc023cc3c7b3b2326acd9b6047cc019960e0b01\").innerHTML = \"No properties found.\";\r\n        return;\r\n    } else {\r\n        let table = document.createElement(\"table\");\r\n        properties.forEach(property => {\r\n            let row = document.createElement(\"tr\");\r\n\r\n            let cell1 = document.createElement(\"td\");\r\n            cell1.textContent = property.decodedDataJson[0].value.value;\r\n            cell1.classList.add(\"propName\");\r\n            row.appendChild(cell1);\r\n\r\n            let cell2 = document.createElement(\"td\");\r\n            cell2.textContent = property.decodedDataJson[1].value.value;\r\n            cell2.classList.add(\"propValue\");\r\n            row.appendChild(cell2);\r\n\r\n            table.appendChild(row);\r\n        });\r\n        document.getElementById(\"List0xe5abe9a6766fbf5944829bb25cc023cc3c7b3b2326acd9b6047cc019960e0b01\").appendChild(table);\r\n    };\r\n\r\n    let messages = await getMessagesForTopic(topicId, 3);\r\n    if (messages.length === 0) {\r\n        document.getElementById(\"List0x3969bb076acfb992af54d51274c5c868641ca5344e1aacd0b1f5e4f80ac0822f\").innerHTML = \"No properties found.\";\r\n    } else {\r\n        document.getElementById(\"List0x3969bb076acfb992af54d51274c5c868641ca5344e1aacd0b1f5e4f80ac0822f\").innerHTML = messages;\r\n    }\r\n\r\n\r\n    currentTopic = topicId;\r\n}\r\n\r\nconst search = async () => {\r\n    var topic = document.getElementById(\"search\").value;\r\n    loadTopic(topic);\r\n}\r\n\r\nconst openAttestationEditor = async (schemaId) => {\r\n    var attestationEditor = document.getElementById(\"New\" + schemaId);\r\n    if (attestationEditor == null) {\r\n\r\n        attestationEditor = document.createElement(\"div\");\r\n        attestationEditor.id = \"New\" + schemaId;\r\n        document.getElementById(\"List\" + schemaId).prepend(attestationEditor);\r\n        attestationEditor.innerHTML = \"<h3>New \" + schemas[schemaId].name + \"</h3>\";\r\n\r\n        schemas[schemaId].properties.forEach(property => {\r\n            attestationEditor.innerHTML += property.display + \": <input id='\" + property.name + \"' type='\" + property.formType + \"'><br />\";\r\n        });\r\n\r\n        attestationEditor.innerHTML += \"<button onclick='callCreateAttestation(\\\"\" + schemaId + \"\\\")'>Create</button></div>\";\r\n        attestationEditor.toggleAttribute(\"hidden\");\r\n    }\r\n    attestationEditor.toggleAttribute(\"hidden\");\r\n}\r\n\r\nconst callCreateAttestation = async (schemaId) => {\r\n    let data = {};\r\n\r\n    let inputs = document.querySelectorAll(`#New${schemaId} input`);\r\n\r\n    inputs.forEach(input => {\r\n        console.log(input.value);\r\n\r\n        if (input.type === 'checkbox') {\r\n            data[input.id] = input.checked;\r\n            input.checked = false;\r\n        } else {\r\n            data[input.id] = input.value;\r\n            input.value = '';\r\n        }\r\n    });\r\n\r\n    createAttestation(schemaId, data, currentTopic);\r\n\r\n    document.getElementById(\"New\" + schemaId).toggleAttribute(\"hidden\");\r\n}\r\n"],"names":[],"version":3,"file":"index.24bfc4bc.js.map"}